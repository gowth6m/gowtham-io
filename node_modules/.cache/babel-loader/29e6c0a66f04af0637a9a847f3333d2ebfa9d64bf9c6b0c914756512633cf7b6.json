{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/TypingText.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypingText = () => {\n  _s();\n  // Declare a new state variable, which we'll call \"typingText\"\n  const [typingText, setTypingText] = useState('');\n\n  // Use the useEffect hook to update the typing text every 100 milliseconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Update the typing text by removing the first character and adding a new random character at the end\n      setTypingText(prevTypingText => {\n        const characters = 'abcdefghijklmnopqrstuvwxyz';\n        return prevTypingText.substring(1) + characters.charAt(Math.floor(Math.random() * characters.length));\n      });\n    }, 100);\n\n    // Clean up the interval when the component unmounts\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: typingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(TypingText, \"Pq9CKT5V6U4pNrtq8i/8iUvCdRY=\");\n_c = TypingText;\nex;\nvar _c;\n$RefreshReg$(_c, \"TypingText\");","map":{"version":3,"names":["React","useEffect","useState","TypingText","typingText","setTypingText","interval","setInterval","prevTypingText","characters","substring","charAt","Math","floor","random","length","clearInterval","ex"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/TypingText.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst TypingText = () => {\n  // Declare a new state variable, which we'll call \"typingText\"\n  const [typingText, setTypingText] = useState('');\n\n  // Use the useEffect hook to update the typing text every 100 milliseconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      // Update the typing text by removing the first character and adding a new random character at the end\n      setTypingText(prevTypingText => {\n        const characters = 'abcdefghijklmnopqrstuvwxyz';\n        return prevTypingText.substring(1) + characters.charAt(Math.floor(Math.random() * characters.length));\n      });\n    }, 100);\n\n    // Clean up the interval when the component unmounts\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  return (\n    <div>\n      {/* Display the typing text */}\n      <p>{typingText}</p>\n    </div>\n  );\n};\n\nex"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEnD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC;MACAF,aAAa,CAACG,cAAc,IAAI;QAC9B,MAAMC,UAAU,GAAG,4BAA4B;QAC/C,OAAOD,cAAc,CAACE,SAAS,CAAC,CAAC,CAAC,GAAGD,UAAU,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGL,UAAU,CAACM,MAAM,CAAC,CAAC;MACvG,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;;IAEP;IACA,OAAO,MAAM;MACXC,aAAa,CAACV,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBAEE;MAAA,UAAIF;IAAU;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACf;AAEV,CAAC;AAAC,GA1BID,UAAU;AAAA,KAAVA,UAAU;AA4BhBc,EAAE;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}