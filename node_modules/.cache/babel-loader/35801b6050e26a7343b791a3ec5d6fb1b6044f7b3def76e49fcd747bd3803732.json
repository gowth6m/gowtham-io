{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/Home.tsx\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  // const [loopNum, setLoopNum] = useState(0);\n  // const [isDeleting, setIsDeleting] = useState(false);\n  // const [text, setText] = useState(\"\");\n  // const [delta, setDelta] = useState(50);\n  // const [index, setIndex] = useState(1);\n  // const toRotate = [\n  //   \"loves to draw\",\n  //   \"is looking to gain more experience\",\n  //   \"is currently chilling\",\n  // ];\n  // const period = 50;\n\n  // useEffect(() => {\n  //   let ticker = setInterval(() => {\n  //     tick();\n  //   }, delta);\n\n  //   return () => {\n  //     clearInterval(ticker);\n  //   };\n  // }, [text]);\n\n  // const tick = () => {\n  //   let i = loopNum % toRotate.length;\n  //   let fullText = toRotate[i];\n  //   let updatedText = isDeleting\n  //     ? fullText.substring(0, text.length - 1)\n  //     : fullText.substring(0, text.length + 1);\n\n  //   setText(updatedText);\n\n  //   if (isDeleting) {\n  //     setDelta((prevDelta) => prevDelta / 2);\n  //   }\n\n  //   if (!isDeleting && updatedText === fullText) {\n  //     setIsDeleting(true);\n  //     setIndex((prevIndex) => prevIndex - 1);\n  //     setDelta(period);\n  //   } else if (isDeleting && updatedText === \"\") {\n  //     setIsDeleting(false);\n  //     setLoopNum(loopNum + 1);\n  //     setIndex(1);\n  //     setDelta(500);\n  //   } else {\n  //     setIndex((prevIndex) => prevIndex + 1);\n  //   }\n  // };\n  const typingDelay = 1000;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intro-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title plax\",\n        children: [\"I'm \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Gowtham\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title-span\",\n          children: \".\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-text plax\",\n        children: [\"A programmer who \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typed-text\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(TypeAnimation, {\n          sequence: [\"likes problem solving\", typingDelay, \"is studying in Exeter\", \"loves the gym!\", \"wants to create iOS apps\", \"is looking for jobs\", \"wants to get into data science\", \"loves to draw\", () => {\n            console.log(\"Done typing!\"); // Place optional callbacks anywhere in the array\n          }],\n\n          wrapper: \"div\",\n          cursor: true,\n          repeat: Infinity,\n          style: {\n            fontSize: \"2em\"\n          },\n          speed: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["TypeAnimation","Home","typingDelay","console","log","Infinity","fontSize"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/Home.tsx"],"sourcesContent":["import { TypeAnimation } from \"react-type-animation\";\nimport \"./Home.css\";\n\nexport function Home() {\n  // const [loopNum, setLoopNum] = useState(0);\n  // const [isDeleting, setIsDeleting] = useState(false);\n  // const [text, setText] = useState(\"\");\n  // const [delta, setDelta] = useState(50);\n  // const [index, setIndex] = useState(1);\n  // const toRotate = [\n  //   \"loves to draw\",\n  //   \"is looking to gain more experience\",\n  //   \"is currently chilling\",\n  // ];\n  // const period = 50;\n\n  // useEffect(() => {\n  //   let ticker = setInterval(() => {\n  //     tick();\n  //   }, delta);\n\n  //   return () => {\n  //     clearInterval(ticker);\n  //   };\n  // }, [text]);\n\n  // const tick = () => {\n  //   let i = loopNum % toRotate.length;\n  //   let fullText = toRotate[i];\n  //   let updatedText = isDeleting\n  //     ? fullText.substring(0, text.length - 1)\n  //     : fullText.substring(0, text.length + 1);\n\n  //   setText(updatedText);\n\n  //   if (isDeleting) {\n  //     setDelta((prevDelta) => prevDelta / 2);\n  //   }\n\n  //   if (!isDeleting && updatedText === fullText) {\n  //     setIsDeleting(true);\n  //     setIndex((prevIndex) => prevIndex - 1);\n  //     setDelta(period);\n  //   } else if (isDeleting && updatedText === \"\") {\n  //     setIsDeleting(false);\n  //     setLoopNum(loopNum + 1);\n  //     setIndex(1);\n  //     setDelta(500);\n  //   } else {\n  //     setIndex((prevIndex) => prevIndex + 1);\n  //   }\n  // };\n  const typingDelay:number = 1000;\n\n  return (\n    <div className=\"home-page flex\">\n      <div className=\"intro-info\">\n        <div className=\"title plax\">\n          I'm <span>Gowtham</span>\n          <span className=\"title-span\">.</span>\n        </div>\n        <div className=\"title-text plax\">\n          A programmer who <span className=\"typed-text\"> </span>\n          {/* <span className=\"wrap\">{typingText}</span> */}\n          <TypeAnimation\n            sequence={[\n              \"likes problem solving\",\n              typingDelay,\n              \"is studying in Exeter\",\n              \"loves the gym!\",\n              \"wants to create iOS apps\",\n              \"is looking for jobs\",\n              \"wants to get into data science\",\n              \"loves to draw\",\n              () => {\n                console.log(\"Done typing!\"); // Place optional callbacks anywhere in the array\n              },\n            ]}\n            wrapper=\"div\"\n            cursor={true}\n            repeat={Infinity}\n            style={{ fontSize: \"2em\" }}\n            speed={1}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,OAAO,YAAY;AAAC;AAEpB,OAAO,SAASC,IAAI,GAAG;EACrB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,WAAkB,GAAG,IAAI;EAE/B,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC7B;MAAK,SAAS,EAAC,YAAY;MAAA,wBACzB;QAAK,SAAS,EAAC,YAAY;QAAA,gCACrB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACxB;UAAM,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACjC,eACN;QAAK,SAAS,EAAC,iBAAiB;QAAA,6CACb;UAAM,SAAS,EAAC,YAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAS,eAEtD,QAAC,aAAa;UACZ,QAAQ,EAAE,CACR,uBAAuB,EACvBA,WAAW,EACX,uBAAuB,EACvB,gBAAgB,EAChB,0BAA0B,EAC1B,qBAAqB,EACrB,gCAAgC,EAChC,eAAe,EACf,MAAM;YACJC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;UAC/B,CAAC,CACD;;UACF,OAAO,EAAC,KAAK;UACb,MAAM,EAAE,IAAK;UACb,MAAM,EAAEC,QAAS;UACjB,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAM,CAAE;UAC3B,KAAK,EAAE;QAAE;UAAA;UAAA;UAAA;QAAA,QACT;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,KArFeL,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}