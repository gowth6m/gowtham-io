{"ast":null,"code":"var _jsxFileName = \"/Users/gowtham/Documents/GitHub/myportfolio/src/components/Home.tsx\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  // let canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  // const c = canvas.getContext(\"2d\");\n\n  // let w: number;\n  // let h: number;\n\n  // const setCanvasExtents = () => {\n  //   w = document.body.clientWidth;\n  //   h = document.body.clientHeight;\n  //   canvas.width = w;\n  //   canvas.height = h;\n  // };\n\n  // setCanvasExtents();\n\n  // window.onresize = () => {\n  //   setCanvasExtents();\n  // };\n\n  // const makeStars = (count: number) => {\n  //   const out = [];\n  //   for (let i = 0; i < count; i++) {\n  //     const star = {\n  //       x: (Math.random() - 0.5) * w * 2,\n  //       y: (Math.random() - 0.5) * h * 2,\n  //       z: (i * 1000) / count,\n  //     };\n  //     out.push(star);\n  //   }\n  //   return out;\n  // };\n\n  // let stars = makeStars(4000);\n\n  // const clear = () => {\n  //   c!.fillStyle = \"black\";\n  //   c!.fillRect(0, 0, canvas.width, canvas.height);\n  // };\n\n  // const putPixel = (x: number, y: number, brightness: number, size: number) => {\n  //   const intensity = brightness * 255;\n  //   const rgb = \"rgb(\" + intensity + \",\" + intensity + \",\" + intensity + \")\";\n  //   c!.fillStyle = rgb;\n  //   c!.fillRect(x, y, size, size);\n  // };\n\n  // const moveStars = (distance: number) => {\n  //   const count = stars.length;\n  //   for (let star of stars) {\n  //     star.z += distance;\n  //   }\n  //   for (let i = 0; stars[count - 1].z > 1000; i++) {\n  //     // Replace star\n  //     stars.pop();\n  //     stars.unshift({\n  //       x: (Math.random() - 0.5) * w * 2,\n  //       y: (Math.random() - 0.5) * h * 2,\n  //       z: stars[0].z - 1000 / count, // keep z ordered\n  //     });\n  //   }\n  // };\n\n  // let prevTime: number;\n  // const init = (time: number) => {\n  //   prevTime = time;\n  //   requestAnimationFrame(tick);\n  // };\n\n  // const tick = (time: number) => {\n  //   let elapsed = time - prevTime;\n  //   prevTime = time;\n\n  //   moveStars(elapsed * 0.025);\n\n  //   clear();\n\n  //   const cx = w / 2;\n  //   const cy = h / 2;\n\n  //   const count = stars.length;\n  //   for (let star of stars) {\n  //     const x = cx + star.x / (star.z * 0.001);\n  //     const y = cy + star.y / (star.z * 0.001);\n\n  //     if (x < 0 || x >= w || y < 0 || y >= h) {\n  //       continue;\n  //     }\n\n  //     const distance = star.z / 1000;\n  //     const brightness = 0.8 - distance * distance;\n  //     const size = brightness * 4.5;\n\n  //     putPixel(x, y, brightness, size);\n  //   }\n\n  //   requestAnimationFrame(tick);\n  // };\n\n  // requestAnimationFrame(init);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-animation\",\n      id: \"background-animation\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"./js/bgAnimate.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-title\",\n      children: \"Welcome!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Home"],"sources":["/Users/gowtham/Documents/GitHub/myportfolio/src/components/Home.tsx"],"sourcesContent":["import \"./Home.css\";\n\nexport function Home() {\n  // let canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\n  // const c = canvas.getContext(\"2d\");\n\n  // let w: number;\n  // let h: number;\n\n  // const setCanvasExtents = () => {\n  //   w = document.body.clientWidth;\n  //   h = document.body.clientHeight;\n  //   canvas.width = w;\n  //   canvas.height = h;\n  // };\n\n  // setCanvasExtents();\n\n  // window.onresize = () => {\n  //   setCanvasExtents();\n  // };\n\n  // const makeStars = (count: number) => {\n  //   const out = [];\n  //   for (let i = 0; i < count; i++) {\n  //     const star = {\n  //       x: (Math.random() - 0.5) * w * 2,\n  //       y: (Math.random() - 0.5) * h * 2,\n  //       z: (i * 1000) / count,\n  //     };\n  //     out.push(star);\n  //   }\n  //   return out;\n  // };\n\n  // let stars = makeStars(4000);\n\n  // const clear = () => {\n  //   c!.fillStyle = \"black\";\n  //   c!.fillRect(0, 0, canvas.width, canvas.height);\n  // };\n\n  // const putPixel = (x: number, y: number, brightness: number, size: number) => {\n  //   const intensity = brightness * 255;\n  //   const rgb = \"rgb(\" + intensity + \",\" + intensity + \",\" + intensity + \")\";\n  //   c!.fillStyle = rgb;\n  //   c!.fillRect(x, y, size, size);\n  // };\n\n  // const moveStars = (distance: number) => {\n  //   const count = stars.length;\n  //   for (let star of stars) {\n  //     star.z += distance;\n  //   }\n  //   for (let i = 0; stars[count - 1].z > 1000; i++) {\n  //     // Replace star\n  //     stars.pop();\n  //     stars.unshift({\n  //       x: (Math.random() - 0.5) * w * 2,\n  //       y: (Math.random() - 0.5) * h * 2,\n  //       z: stars[0].z - 1000 / count, // keep z ordered\n  //     });\n  //   }\n  // };\n\n  // let prevTime: number;\n  // const init = (time: number) => {\n  //   prevTime = time;\n  //   requestAnimationFrame(tick);\n  // };\n\n  // const tick = (time: number) => {\n  //   let elapsed = time - prevTime;\n  //   prevTime = time;\n\n  //   moveStars(elapsed * 0.025);\n\n  //   clear();\n\n  //   const cx = w / 2;\n  //   const cy = h / 2;\n\n  //   const count = stars.length;\n  //   for (let star of stars) {\n  //     const x = cx + star.x / (star.z * 0.001);\n  //     const y = cy + star.y / (star.z * 0.001);\n\n  //     if (x < 0 || x >= w || y < 0 || y >= h) {\n  //       continue;\n  //     }\n\n  //     const distance = star.z / 1000;\n  //     const brightness = 0.8 - distance * distance;\n  //     const size = brightness * 4.5;\n\n  //     putPixel(x, y, brightness, size);\n  //   }\n\n  //   requestAnimationFrame(tick);\n  // };\n\n  // requestAnimationFrame(init);\n\n  return (\n    <div className=\"home-page flex\">\n      <div className=\"background-animation\" id=\"background-animation\">\n        <canvas id=\"canvas\"></canvas>\n        <script src=\"./js/bgAnimate.js\"></script>\n      </div>\n      <div className=\"home-title\">Welcome!</div>\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAO,YAAY;AAAC;AAEpB,OAAO,SAASA,IAAI,GAAG;EACrB;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAK,SAAS,EAAC,sBAAsB;MAAC,EAAE,EAAC,sBAAsB;MAAA,wBAC7D;QAAQ,EAAE,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAU,eAC7B;QAAQ,GAAG,EAAC;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,eACN;MAAK,SAAS,EAAC,YAAY;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEV;AAAC,KA9GeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}